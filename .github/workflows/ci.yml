name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# - Bumping the *minimum* required Node version? You must bump:
#   1. package.json -> engines.node
#   2. package.json -> devDependencies.@types/node
#   3. tsconfig.json -> {target, lib}
#   4. .github/workflows/ci.yml -> node-version
# - Bumping the *maximum* tested Node version? You must bump also: publish.yml
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            npm-shrinkwrap.json
            app/npm-shrinkwrap.json
            package-lock.json
            app/package-lock.json
      - env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: npm ci --no-fund # Will also (via `prepare` hook): 1. install ./app, 2. build
      - run: npm run lint
  playwright:
    runs-on: windows-latest # Doesn't work on headless ubuntu, and is slow on mac
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            npm-shrinkwrap.json
            app/npm-shrinkwrap.json
            package-lock.json
            app/package-lock.json
      - env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: npm ci --no-fund # Will also (via `prepare` hook): 1. install ./app, 2. build
      - run: npm run test:playwright
        timeout-minutes: 5
        # Useful to debug PlayWright tests failing in CI
        # env:
        #   DEBUG: pw:browser*
  tests:
    strategy:
      matrix:
        node-version:
          - '20'
          - '16' # the oldest we require in package.json -> engines.node, to check we run on this minimum
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            npm-shrinkwrap.json
            app/npm-shrinkwrap.json
            package-lock.json
            app/package-lock.json
      - env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: npm ci --no-fund # Will also (via `prepare` hook): 1. install ./app, 2. build
      - run: npm run test:noplaywright
